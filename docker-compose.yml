services:
  # Database service
  database:
    image: postgres:15-alpine
    container_name: homeaccount-database
    environment:
      - POSTGRES_DB=homeaccount
      - POSTGRES_USER=homeaccount_user
      - POSTGRES_PASSWORD=homeaccount_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - homeaccount-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homeaccount_user -d homeaccount"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Backend service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: homeaccount-backend
    ports:
      - "3001:3000"
    environment:
      - DATABASE_URL=postgresql://homeaccount_user:homeaccount_password@database:5432/homeaccount
      - AUTO_MIGRATE=true
      - MIGRATIONS_DIR=/database/migrations
      - APPLY_SEEDS=false
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./database:/database
    networks:
      - homeaccount-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/current-data', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: homeaccount-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - homeaccount-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  homeaccount-network:
    driver: bridge
    name: homeaccount-network 